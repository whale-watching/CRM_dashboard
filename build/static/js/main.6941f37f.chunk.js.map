{"version":3,"sources":["logo.svg","components/client-comps/TableHeader.js","components/client-comps/ClientRow.js","components/client-comps/Modal.js","components/client-comps/Clients.js","components/action-comps/ClientInput.js","components/action-comps/UpdateClient.js","components/action-comps/AddClient.js","components/action-comps/Actions.js","components/analytic-comps/Badge.js","components/analytic-comps/Badges.js","components/analytic-comps/TopEmployees.js","components/analytic-comps/SalesBy.js","components/analytic-comps/SalesSince.js","components/analytic-comps/ClientAcquisition.js","components/analytic-comps/Charts.js","components/analytic-comps/Analytics.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TableHeader","react_default","a","createElement","id","className","Component","ClientRow","getPartOfName","name","part","i","indexOf","substring","formatDate","date","day","Date","getDate","month","getMonth","year","getFullYear","concat","popModal","_this","props","client","surname","country","_id","this","onDoubleClick","firstContact","emailType","sold","owner","Modal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","setState","defineProperty","target","value","userChangedInput","state","nameInput","surnameInput","countryInput","updateClient","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","alert","abrupt","axios","put","stop","closeModal","onClick","type","onChange","Clients","handleFilter","getClients","clients","get","sent","data","componentDidMount","_callee2","_context2","currentClients","slice","pageNum","filterClients","selectedFilter","filter","c","toLowerCase","includes","searchFilter","pageUp","length","pageDown","showCurrentClientNum","topNum","lowNum","modalClient","showModal","_callee3","_context3","_this2","placeholder","search","client_comps_TableHeader","map","client_comps_ClientRow","key","client_comps_Modal","ClientInput","updateName","selectedName","updateClientID","createDataListOptions","find","list","onInput","UpdateClient","clientIdToUpdate","createEmailDropdownElement","newEmailType","handleSelections","selected","disabled","disableEmptySelect","createMaterialEmailDropdownElement","Select_default","inputProps","MenuItem_default","newOwner","createOwnerDropdownElement","availableOwners","forEach","some","ao","push","createOwnerMaterialDropdownElement","updateUser","_ref3","propertyToUpdate","updateValue","_x","_x2","apply","arguments","_this$setState2","objectSpread","checkState","transferOwnership","showSnackbar","sendEmail","declareSale","action_comps_ClientInput","FormControl_default","InputLabel_default","Button_default","AddClient","isStateSet","keys","sk","saveClient","_ref","post","clearInputs","firstName","email","addClient","TextField_default","label","margin","variant","color","Actions","message","showSavedMessage","clearSnackbar","showUpdatedMessage","showNotUpdatedMessage","showNotAddedMessage","snackbar","setTimeout","action_comps_UpdateClient","Divider_default","action_comps_AddClient","Snackbar_default","anchorOrigin","vertical","horizontal","open","ContentProps","aria-describedby","Badge","style","backgroundColor","badgeCategory","icon","sentence","Badges","getMonthName","undefined","Intl","DateTimeFormat","format","getNumNewClients","currentMonth","getNumEmailsSent","getNumOutstandingClients","getHottestCountry","clientsPerCountry","countries","maxClients","hottestCountry","createBadgeElements","newClients","emailsSent","outstandingClients","isLoading","badgeElements","badgeCategories","bc","analytic_comps_Badge","TopEmployees","createOwnerClientObj","employeeSales","createDataArray","dataArr","sales","generateTopEmployees","dataForChart","sort","b","splice","es6","width","height","layout","top","right","bottom","left","reversed","dataKey","barSize","fill","SalesBy","handleSelection","selection","getFullMonth","sortMonths","monthsArr","monthsOrder","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","createDataObject","dataObj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","generateSalesByDataPoint","dataKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","split","getChartDataBySelection","strokeDasharray","SalesSince","getHistoricalDate","daysBack","currentDate","setDate","getAllDates","dates","getSalesByDate","numOfSales","randomMultiplier","Math","floor","random","saleDate","getDataForChart","salesByDate","saleByDate","dot","stroke","strokeWidth","ClientAcquisition","getDateRange","start","end","startDate","endDate","numOfClients","contactDate","getClientsByDate","periodName","clientsByPeriod","isAnimationActive","cx","cy","outerRadius","Charts","analytic_comps_TopEmployees","analytic_comps_SalesBy","analytic_comps_SalesSince","analytic_comps_ClientAcquisition","Analytics","showLoader","showData","analytic_comps_Badges","analytic_comps_Charts","Home","redirectPage","react_router","to","App","changePage","pageName","isClientSelected","isActionSelected","isAnalyticSelected","clientSelectedClass","actionSelectedClass","analyticSelectedClass","react_router_dom","exact","path","render","components_Home","client_comps_Clients","action_comps_Actions","analytic_comps_Analytics","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iZCoBzBC,2LAdP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,WACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,WACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,iBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,SACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,iBAXUC,+BCyCXC,qNAvCXC,cAAgB,SAACC,EAAMC,GACnB,IAAIC,EAAIF,EAAKG,QAAQ,KACrB,MAAgB,UAATF,EAAmBD,EAAKI,UAAU,EAAGF,GAAKF,EAAKI,UAAUF,EAAI,MAGxEG,WAAa,SAACC,GAGV,IAAIC,GAFJD,EAAO,IAAIE,KAAKF,IAEDG,UACXC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAON,EAAKO,cAEhB,SAAAC,OAAUJ,EAAV,KAAAI,OAAmBP,EAAnB,KAAAO,OAA0BF,MAG9BG,SAAW,WACP,IAAIf,EAAOgB,EAAKjB,cAAciB,EAAKC,MAAMC,OAAOlB,KAAM,SAClDmB,EAAUH,EAAKjB,cAAciB,EAAKC,MAAMC,OAAOlB,KAAM,WAEzDgB,EAAKC,MAAMF,SAASf,EAAMmB,EAASH,EAAKC,MAAMC,OAAOE,QAASJ,EAAKC,MAAMC,OAAOG,8EAIhF,IAAIH,EAASI,KAAKL,MAAMC,OAExB,OACI1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAa2B,cAAeD,KAAKP,UAC5CvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY0B,KAAKvB,cAAcmB,EAAOlB,KAAM,UAC3DR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY0B,KAAKvB,cAAcmB,EAAOlB,KAAM,YAC3DR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYsB,EAAOE,SAClC5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY0B,KAAKjB,WAAWa,EAAOM,eAClDhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYsB,EAAOO,UAAYP,EAAOO,UAAY,KACjEjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYsB,EAAOQ,KAAOlC,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iBAAsB,KAC5EJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYsB,EAAOS,eAnC1B9B,cCqDT+B,sBAnDX,SAAAA,EAAYX,GAAO,IAAAD,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAM,IACfZ,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAX,KAAML,KAQViB,YAAc,SAAAC,GAAC,OAAInB,EAAKoB,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAiBM,EAAEG,OAAOtC,KAAOmC,EAAEG,OAAOC,SAT1CvB,EAWnBwB,iBAAmB,WACf,OAAIxB,EAAKyB,MAAMC,YAAc1B,EAAKC,MAAMjB,MACpCgB,EAAKyB,MAAME,eAAiB3B,EAAKC,MAAME,SACvCH,EAAKyB,MAAMG,eAAiB5B,EAAKC,MAAMG,SAd5BJ,EAqBnB6B,aArBmBhB,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAqBJ,SAAAC,IAAA,IAAA/B,EAAA,OAAA6B,EAAAtD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACNrC,EAAKwB,mBADC,CAAAW,EAAAE,KAAA,eAEPC,MAAM,mDAFCH,EAAAI,OAAA,wBAMPrC,EAAS,CACTlB,KAAI,GAAAc,OAAKE,EAAKyB,MAAMC,UAAhB,KAAA5B,OAA6BE,EAAKyB,MAAME,cAC5CvB,QAASJ,EAAKyB,MAAMG,cARbO,EAAAE,KAAA,EAWLG,IAAMC,IAAN,iBAAA3C,OAA2BE,EAAKC,MAAMtB,IAAMuB,GAXvC,OAYXF,EAAKC,MAAM4B,eAZA,wBAAAM,EAAAO,SAAAT,MArBIjC,EAoCnB2C,WAAa,kBAAM3C,EAAKC,MAAM0C,cAlC1B3C,EAAKyB,MAAQ,CACTC,UAAW1B,EAAKC,MAAMjB,KACtB2C,aAAc1B,EAAME,QACpByB,aAAc3B,EAAMG,SALTJ,wEAuCf,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACJH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGC,GAAG,iBAAiBiE,QAAStC,KAAKqC,WAAY/D,UAAU,yBAChEJ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBAAkBF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAO7D,KAAK,YAAYuC,MAAOjB,KAAKmB,MAAMC,UAAWoB,SAAUxC,KAAKY,eACvG1C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAAqBF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAO7D,KAAK,eAAeuC,MAAOjB,KAAKmB,MAAME,aAAcmB,SAAUxC,KAAKY,eAChH1C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAAqBF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAO7D,KAAK,eAAeuC,MAAOjB,KAAKmB,MAAMG,aAAckB,SAAUxC,KAAKY,eAChH1C,EAAAC,EAAAC,cAAA,OAAKkE,QAAStC,KAAKuB,aAAclD,GAAG,sBAApC,kBA/CIE,cCoHLkE,cA7GX,SAAAA,IAAc,IAAA/C,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAyC,IACV/C,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAkC,GAAA9B,KAAAX,QAWJ0C,aAAe,SAAA7B,GAAC,OAAInB,EAAKoB,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAiBM,EAAEG,OAAOtC,KAAOmC,EAAEG,OAAOC,SAZhDvB,EAcdiD,WAdcpC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAcD,SAAAC,IAAA,IAAAiB,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWG,IAAMW,IAAI,YADrB,cACLD,EADKf,EAAAiB,KAAAjB,EAAAI,OAAA,SAEFW,EAAQG,MAFN,wBAAAlB,EAAAO,SAAAT,MAdCjC,EAmBdsD,kBAnBczC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAmBM,SAAAuB,IAAA,IAAAL,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACIrC,EAAKiD,aADT,OACZC,EADYM,EAAAJ,KAEhBpD,EAAKoB,SAAS,CAAE8B,YAFA,wBAAAM,EAAAd,SAAAa,MAnBNvD,EAwBdyD,eAAiB,kBAAMzD,EAAKyB,MAAMyB,QAAQQ,MAA4B,GAArB1D,EAAKyB,MAAMkC,QAAgB,GAAyB,GAArB3D,EAAKyB,MAAMkC,UAxB7E3D,EA0Bd4D,cAAgB,WAEZ,MAAkC,SAA9B5D,EAAKyB,MAAMoC,eACJ7D,EAAKyD,iBACPK,OAAO,SAAAC,GAAC,OAAIA,EAAE/D,EAAKyB,MAAMoC,gBAAgBG,cACrCC,SAASjE,EAAKyB,MAAMyC,aAAaF,iBAEnChE,EAAKyD,iBAAiBK,OAAO,SAAAC,GAAC,OAAIA,EAAErD,QAjCrCV,EAqCdmE,OAAS,WACL,KAAyB,GAArBnE,EAAKyB,MAAMkC,QAAe3D,EAAKyB,MAAMyB,QAAQkB,QAAjD,CAEA,IAAIT,EAAU3D,EAAKyB,MAAMkC,QAAU,EACnC3D,EAAKoB,SAAS,CAAEuC,cAzCN3D,EA4CdqE,SAAW,WACP,GAA2B,IAAvBrE,EAAKyB,MAAMkC,QAAf,CAEA,IAAIA,EAAU3D,EAAKyB,MAAMkC,QAAU,EACnC3D,EAAKoB,SAAS,CAAEuC,cAhDN3D,EAmDdsE,qBAAuB,WAEnB,IAAIC,EAA8B,GAArBvE,EAAKyB,MAAMkC,QACpBa,EAASD,EAAS,GAEtB,OACI/F,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,sBAAsBgE,QAAS5C,EAAKqE,WACjD7F,EAAAC,EAAAC,cAAA,SAAI8F,EAAJ,MAAoC,GAArBxE,EAAKyB,MAAMkC,QAAe3D,EAAKyB,MAAMyB,QAAQkB,QAAUpE,EAAKyB,MAAMyB,QAAQkB,OAAS,MAAQG,GAC1G/F,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAuBgE,QAAS5C,EAAKmE,WA5DhDnE,EAiEdD,SAAW,SAACf,EAAMmB,EAASC,EAASzB,GAChC,IAAI8F,EAAc,CAACzF,OAAMmB,UAASC,UAASzB,MAC3CqB,EAAKoB,SAAS,CAACsD,WAAW,EAAMD,iBAnEtBzE,EAsEd2C,WAAa,kBAAM3C,EAAKoB,SAAS,CAACsD,WAAW,EAAOD,YAAa,MAtEnDzE,EAwEd6B,aAxEchB,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAwEC,SAAA2C,IAAA,IAAAzB,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACSrC,EAAKiD,aADd,OACPC,EADO0B,EAAAxB,KAEXpD,EAAKoB,SAAS,CAACsD,WAAW,EAAOD,YAAa,GAAIvB,YAFvC,wBAAA0B,EAAAlC,SAAAiC,MAtEX3E,EAAKyB,MAAQ,CACTyB,QAAS,GACTgB,aAAc,GACdL,eAAgB,OAChBF,QAAS,EACTe,WAAW,EACXD,YAAa,IARPzE,wEA6EL,IAAA6E,EAAAvE,KAEL,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACJH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBAEJH,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAO7D,KAAK,eAAe8F,YAAY,SAASvD,MAAOjB,KAAKmB,MAAMsD,OAAQjC,SAAUxC,KAAK0C,aAAcrE,GAAG,yBACtHH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,gBAAgBK,KAAK,iBAAiBuC,MAAOjB,KAAKmB,MAAMoC,eAAgBf,SAAUxC,KAAK0C,cAC9FxE,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,QACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,SAAd,SACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,QAAd,QACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,SAAd,SACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,WAAd,aAGR/C,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACJH,EAAAC,EAAAC,cAACsG,EAAD,MACC1E,KAAKsD,gBAAgBqB,IAAI,SAAAlB,GAAC,OAAIvF,EAAAC,EAAAC,cAACwG,EAAD,CAAWnF,SAAU8E,EAAK9E,SAAUG,OAAQ6D,EAAGoB,IAAKpB,EAAE1D,QACpFC,KAAKgE,wBAEThE,KAAKmB,MAAMiD,UAAYlG,EAAAC,EAAAC,cAAC0G,EAAD,CACRpG,KAAMsB,KAAKmB,MAAMgD,YAAYzF,KAC7BmB,QAASG,KAAKmB,MAAMgD,YAAYtE,QAChCC,QAASE,KAAKmB,MAAMgD,YAAYrE,QAChCzB,GAAI2B,KAAKmB,MAAMgD,YAAY9F,GAC3BgE,WAAYrC,KAAKqC,WACjBd,aAAcvB,KAAKuB,eAAmB,aAzGhDhD,sBCyBPwG,cA7BX,SAAAA,IAAa,IAAArF,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAA+E,IACTrF,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAwE,GAAApE,KAAAX,QAMJgF,WAAa,SAAAnE,GAAC,OAAInB,EAAKoB,SAAS,CAACmE,aAAcpE,EAAEG,OAAOC,OAAQ,WAAajB,KAAKkF,oBAPrExF,EASbyF,sBAAwB,kBAAMzF,EAAKC,MAAMiD,QAAQ+B,IAAI,SAAAlB,GAAC,OAAIvF,EAAAC,EAAAC,cAAA,UAAQyG,IAAKpB,EAAE1D,IAAKkB,MAAOwC,EAAE/E,UAT1EgB,EAWbwF,eAAiB,WACb,IAAItF,EAASF,EAAKC,MAAMiD,QAAQwC,KAAK,SAAA3B,GAAC,OAAIA,EAAE/E,OAASgB,EAAKyB,MAAM8D,eAC7DrF,GAAUF,EAAKC,MAAMuF,eAAetF,EAAOG,MAX9CL,EAAKyB,MAAQ,CACT8D,aAAc,IAHTvF,wEAiBT,OACIxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOlE,GAAG,sBAAsBmG,YAAY,cAAca,KAAK,UAAUpE,MAAOjB,KAAKmB,MAAM8D,aAAcK,QAAStF,KAAKgF,aACnI9G,EAAAC,EAAAC,cAAA,YAAUC,GAAG,WACR2B,KAAKmF,iCAxBA5G,8GCmNXgH,cApLX,SAAAA,IAAc,IAAA7F,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAuF,IACV7F,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAgF,GAAA5E,KAAAX,QAUJkF,eAAiB,SAAAM,GAAgB,OAAI9F,EAAKoB,SAAS,CAAE0E,sBAXvC9F,EAadiD,WAbcpC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAaD,SAAAC,IAAA,IAAAiB,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWG,IAAMW,IAAI,oBADrB,cACLD,EADKf,EAAAiB,KAAAjB,EAAAI,OAAA,SAEFW,EAAQG,MAFN,wBAAAlB,EAAAO,SAAAT,MAbCjC,EAkBdsD,kBAlBczC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAkBM,SAAAuB,IAAA,IAAAL,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACIrC,EAAKiD,aADT,OACZC,EADYM,EAAAJ,KAEhBpD,EAAKoB,SAAS,CAAE8B,YAFA,wBAAAM,EAAAd,SAAAa,MAlBNvD,EAuBd+F,2BAA6B,WACzB,OACIvH,EAAAC,EAAAC,cAAA,UAAQM,KAAK,eAAeuC,MAAOvB,EAAKyB,MAAMuE,aAAclD,SAAU9C,EAAKiG,kBACvEzH,EAAAC,EAAAC,cAAA,UAAQwH,UAAQ,EAACC,WAAUnG,EAAKyB,MAAM2E,mBAAmBJ,cAAsB,MAA/E,2BACAxH,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,KACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,KAAd,OA9BEvB,EAmCdqG,mCAAqC,WACjC,OACI7H,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACI8C,MAAOvB,EAAKyB,MAAMuE,aAAclD,SAAU9C,EAAKiG,iBAC/CM,WAAY,CACRvH,KAAM,iBAGVR,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU0H,WAAUnG,EAAKyB,MAAM2E,mBAAmBK,UAAkB,MAChEjI,EAAAC,EAAAC,cAAA,oCAEJF,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU8C,MAAM,KAAhB,KACA/C,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU8C,MAAM,KAAhB,KACA/C,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU8C,MAAM,KAAhB,KACA/C,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU8C,MAAM,KAAhB,OAjDEvB,EAsDd0G,2BAA6B,WACzB,IAAIC,EAAkB,GAItB,OAHA3G,EAAKyB,MAAMyB,QAAQ0D,QAAQ,SAAA7C,GAAC,OAAI4C,EAAgBE,KAAK,SAAAC,GAAE,OAAIA,IAAO/C,EAAEpD,QAChE,KAAOgG,EAAgBI,KAAKhD,EAAEpD,SAE3BgG,EAAgB1B,IAAI,SAAA6B,GAAE,OAAItI,EAAAC,EAAAC,cAAA,UAAQ6C,MAAOuF,GAAKA,MA3D3C9G,EA8DdgH,mCAAqC,WACjC,IAAIL,EAAkB,GAItB,OAHA3G,EAAKyB,MAAMyB,QAAQ0D,QAAQ,SAAA7C,GAAC,OAAI4C,EAAgBE,KAAK,SAAAC,GAAE,OAAIA,IAAO/C,EAAEpD,QAChE,KAAOgG,EAAgBI,KAAKhD,EAAEpD,SAE3BgG,EAAgB1B,IAAI,SAAA6B,GAAE,OAAItI,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU0G,IAAK2B,EAAIvF,MAAOuF,GAAKA,MAnEtD9G,EAsEdiH,WAtEc,eAAAC,EAAArG,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAsED,SAAA2C,EAAOwC,EAAkBC,GAAzB,OAAArF,EAAAtD,EAAAyD,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACHG,IAAMC,IAAN,WAAA3C,OAAqBE,EAAKyB,MAAMqE,iBAAhC,mBAAAhG,OAAkEqH,GAAoB,CAAE5F,MAAO6F,IAD5F,wBAAAxC,EAAAlC,SAAAiC,MAtEC,gBAAA0C,EAAAC,GAAA,OAAAJ,EAAAK,MAAAjH,KAAAkH,YAAA,GAAAxH,EA0EdiG,iBAAmB,SAAA9E,GACf,GAAInB,EAAKyB,MAAM2E,mBAAmBjF,EAAEG,OAAOtC,MACvCgB,EAAKoB,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAiBM,EAAEG,OAAOtC,KAAOmC,EAAEG,OAAOC,YACvC,KAAAkG,EACCrB,EAAkBvF,OAAA6G,EAAA,EAAA7G,CAAA,GAAQb,EAAKyB,MAAM2E,oBACzCA,EAAmBjF,EAAEG,OAAOtC,OAAQ,EAEpCgB,EAAKoB,UAALqG,EAAA,GAAA5G,OAAAQ,EAAA,EAAAR,CAAA4G,EAAiBtG,EAAEG,OAAOtC,KAAOmC,EAAEG,OAAOC,OAA1CV,OAAAQ,EAAA,EAAAR,CAAA4G,EAAA,qBAAiDrB,GAAjDqB,MAjFMzH,EAqFd2H,WAAa,mBAAM3H,EAAKyB,MAAMqE,kBArFhB9F,EAuFd4H,kBAAoB,WACZ5H,EAAK2H,cACL3H,EAAKiH,WAAW,QAASjH,EAAKyB,MAAMgF,UACpCzG,EAAKC,MAAM4H,aAAa,YAExB7H,EAAKC,MAAM4H,aAAa,gBA5FlB7H,EAgGd8H,UAAY,WACJ9H,EAAK2H,cACL3H,EAAKiH,WAAW,YAAajH,EAAKyB,MAAMuE,cACxChG,EAAKC,MAAM4H,aAAa,YAExB7H,EAAKC,MAAM4H,aAAa,gBArGlB7H,EAyGd+H,YAAc,WACN/H,EAAK2H,cACL3H,EAAKiH,WAAW,QAAQ,GACxBjH,EAAKC,MAAM4H,aAAa,YAExB7H,EAAKC,MAAM4H,aAAa,gBA5G5B7H,EAAKyB,MAAQ,CACTyB,QAAS,GACT4C,iBAAkB,GAClBW,SAAU,GACVT,aAAc,GACdI,mBAAoB,CAAEK,UAAU,EAAOT,cAAc,IAP/ChG,wEAoHV,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACJH,EAAAC,EAAAC,cAAA,oBAGAF,EAAAC,EAAAC,cAACsJ,EAAD,CAAaxC,eAAgBlF,KAAKkF,eAAgBtC,QAAS5C,KAAKmB,MAAMyB,UAEtE1E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBD,GAAG,sBAC9BH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,KACID,EAAAC,EAAAC,cAACwJ,EAAAzJ,EAAD,8BAEAD,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACI8C,MAAOjB,KAAKmB,MAAMgF,SAAU3D,SAAUxC,KAAK2F,iBAC3CM,WAAY,CACRvH,KAAM,WACNL,GAAI,eAGRH,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CAAU0H,WAAU7F,KAAKmB,MAAM2E,mBAAmBK,UAAkB,MAChEjI,EAAAC,EAAAC,cAAA,oCAEH4B,KAAK0G,uCAGdxI,EAAAC,EAAAC,cAACyJ,EAAA1J,EAAD,CAAQE,GAAG,eAAeiE,QAAStC,KAAKsH,kBAAmBhJ,UAAU,cAArE,aAaJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBD,GAAG,cAE9BH,EAAAC,EAAAC,cAACuJ,EAAAxJ,EAAD,KACID,EAAAC,EAAAC,cAACwJ,EAAAzJ,EAAD,mBACC6B,KAAK+F,sCAEV7H,EAAAC,EAAAC,cAACyJ,EAAA1J,EAAD,CAAQE,GAAG,iBAAiBiE,QAAStC,KAAKwH,UAAWlJ,UAAU,cAA/D,SAOJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBD,GAAG,gBAE9BH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAR,iBACAH,EAAAC,EAAAC,cAACyJ,EAAA1J,EAAD,CAAQE,GAAG,mBAAmBiE,QAAStC,KAAKyH,YAAanJ,UAAU,cAAnE,oBA3KOC,8BC8EZuJ,cAtGX,SAAAA,IAAc,IAAApI,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAA8H,IACVpI,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAuH,GAAAnH,KAAAX,QAUJY,YAAc,SAAAC,GAAC,OAAInB,EAAKoB,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAiBM,EAAEG,OAAOtC,KAAOmC,EAAEG,OAAOC,SAX/CvB,EAadqI,WAAa,WACT,IAAIA,GAAa,EAIjB,OAHgBxH,OAAOyH,KAAKtI,EAAKyB,OACvBmF,QAAQ,SAAA2B,GAAE,OAAIvI,EAAKyB,MAAM8G,GAAM,KAAOF,GAAa,IAEtDA,GAlBGrI,EAqBdwI,WArBc,eAAAC,EAAA5H,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAqBD,SAAAC,EAAO/B,GAAP,OAAA6B,EAAAtD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHG,IAAMkG,KAAK,UAAWxI,GADnB,wBAAAiC,EAAAO,SAAAT,MArBC,gBAAAoF,GAAA,OAAAoB,EAAAlB,MAAAjH,KAAAkH,YAAA,GAAAxH,EAyBd2I,YAAc,kBAAM3I,EAAKoB,SAAS,CAC9BwH,UAAW,GACXzI,QAAS,GACT0I,MAAO,GACPzI,QAAS,GACTO,MAAO,MA9BGX,EAiCd8I,UAAY,WACR,GAAI9I,EAAKqI,aAAc,CACnB,IAAInI,EAAS,CACTlB,KAAI,GAAAc,OAAKE,EAAKyB,MAAMmH,UAAhB,KAAA9I,OAA6BE,EAAKyB,MAAMtB,SAC5C0I,MAAO7I,EAAKyB,MAAMoH,MAClBrI,aAAc,IAAIhB,KAClBmB,MAAOX,EAAKyB,MAAMd,MAClBP,QAASJ,EAAKyB,MAAMrB,SAExBJ,EAAKwI,WAAWtI,GAChBF,EAAK2I,cACL3I,EAAKC,MAAM4H,aAAa,cAExB7H,EAAKC,MAAM4H,aAAa,cA5C5B7H,EAAKyB,MAAQ,CACTmH,UAAW,GACXzI,QAAS,GACT0I,MAAO,GACPzI,QAAS,GACTO,MAAO,IAPDX,wEAmDV,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACJH,EAAAC,EAAAC,cAAA,wBAEAF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAGJH,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,CACIG,UAAU,gBACVoK,MAAM,aACNhK,KAAK,YACLuC,MAAOjB,KAAKmB,MAAMmH,UAAW9F,SAAUxC,KAAKY,YAC5C+H,OAAO,SAGXzK,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,CACIG,UAAU,gBACVoK,MAAM,UACNhK,KAAK,UAAUuC,MAAOjB,KAAKmB,MAAMtB,QAAS2C,SAAUxC,KAAKY,YACzD+H,OAAO,SAGXzK,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,CACIG,UAAU,gBACVoK,MAAM,QACNhK,KAAK,QAAQuC,MAAOjB,KAAKmB,MAAMoH,MAAO/F,SAAUxC,KAAKY,YACrD+H,OAAO,SAGXzK,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,CACIG,UAAU,gBACVoK,MAAM,UACNhK,KAAK,UAAUuC,MAAOjB,KAAKmB,MAAMrB,QAAS0C,SAAUxC,KAAKY,YACzD+H,OAAO,SAGXzK,EAAAC,EAAAC,cAACqK,EAAAtK,EAAD,CACIG,UAAU,gBACVoK,MAAM,QACNhK,KAAK,QAAQuC,MAAOjB,KAAKmB,MAAMd,MAAOmC,SAAUxC,KAAKY,YACrD+H,OAAO,SAGXzK,EAAAC,EAAAC,cAACyJ,EAAA1J,EAAD,CAAQE,GAAG,iBAAiBiE,QAAStC,KAAKwI,UAAWI,QAAQ,YAAYC,MAAM,WAA/E,2BAhGItK,gDCwFTuK,cAnFX,SAAAA,IAAc,IAAApJ,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAA8I,IACVpJ,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAuI,GAAAnI,KAAAX,QASJuH,aAAe,SAAAwB,GACK,UAAZA,GACArJ,EAAKoB,SAAS,CAAEkI,kBAAkB,IAClCtJ,EAAKuJ,cAAc,qBACD,YAAZF,GACNrJ,EAAKoB,SAAS,CAACoI,oBAAoB,IACnCxJ,EAAKuJ,cAAc,uBACD,gBAAZF,GACNrJ,EAAKoB,SAAS,CAACqI,uBAAuB,IACtCzJ,EAAKuJ,cAAc,0BACD,cAAZF,IACNrJ,EAAKoB,SAAS,CAACsI,qBAAqB,IACpC1J,EAAKuJ,cAAc,yBAtBbvJ,EA0BduJ,cAAgB,SAAAI,GACZC,WAAW,kBAAM5J,EAAKoB,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAiB8I,GAAW,KAAU,MAzBvD3J,EAAKyB,MAAQ,CACT6H,kBAAkB,EAClBE,oBAAoB,EACpBC,uBAAuB,EACvBC,qBAAqB,GANf1J,wEAgCV,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACJH,EAAAC,EAAAC,cAACmL,EAAD,CAAchC,aAAcvH,KAAKuH,eACjCrJ,EAAAC,EAAAC,cAACoL,EAAArL,EAAD,CAASE,GAAG,UAAUuK,QAAQ,WAC9B1K,EAAAC,EAAAC,cAACqL,EAAD,CAAWlC,aAAcvH,KAAKuH,eAC9BrJ,EAAAC,EAAAC,cAACsL,EAAAvL,EAAD,CACIwL,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAM9J,KAAKmB,MAAM6H,iBACjBD,QAAS7K,EAAAC,EAAAC,cAAA,8BAEbF,EAAAC,EAAAC,cAACsL,EAAAvL,EAAD,CACIwL,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAM9J,KAAKmB,MAAMiI,oBACjBW,aAAc,CACVC,mBAAoB,cAExBjB,QAAS7K,EAAAC,EAAAC,cAAA,8CAEbF,EAAAC,EAAAC,cAACsL,EAAAvL,EAAD,CACIwL,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAM9J,KAAKmB,MAAM+H,mBACjBa,aAAc,CACVC,mBAAoB,cAExBjB,QAAS7K,EAAAC,EAAAC,cAAA,gCAEbF,EAAAC,EAAAC,cAACsL,EAAAvL,EAAD,CACIwL,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,KAAM9J,KAAKmB,MAAMgI,sBACjBY,aAAc,CACVC,mBAAoB,cAExBjB,QAAS7K,EAAAC,EAAAC,cAAA,qDA9EPG,aCQP0L,2LAVP,OACI/L,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB4L,MAAO,CAACC,gBAAiBnK,KAAKL,MAAMyK,cAAcvB,QAAQ3K,EAAAC,EAAAC,cAAA,KAAGE,UAAW0B,KAAKL,MAAMyK,cAAcC,QACjInM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAe0B,KAAKL,MAAMyK,cAAcrH,MACvD7E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkB0B,KAAKL,MAAMyK,cAAcE,kBAPtD/L,cCoFLgM,cAlFX,SAAAA,IAAc,IAAA7K,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAuK,IACV7K,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAgK,GAAA5J,KAAAX,QAMJwK,aAAe,eAACxL,EAADkI,UAAApD,OAAA,QAAA2G,IAAAvD,UAAA,GAAAA,UAAA,GAAQ,IAAIhI,KAAZ,OAAuB,IAAIwL,KAAKC,eAAe,QAAS,CAACvL,MAAO,SAASwL,OAAO5L,IAPjFU,EASdmL,iBAAmB,SAAAjI,GACf,IAAMkI,GAAe,IAAI5L,MAAOG,WAEhC,OAAOuD,EAAQY,OAAO,SAAAC,GAAC,OAAK,IAAIvE,KAAKuE,EAAEvD,cAAcb,aAAgByL,IAAchH,QAZzEpE,EAedqL,iBAAmB,SAAAnI,GAAO,OAAIA,EAAQY,OAAO,SAAAC,GAAC,OAAIA,EAAEtD,YAAW2D,QAfjDpE,EAiBdsL,yBAA2B,SAAApI,GAAO,OAAIA,EAAQY,OAAO,SAAAC,GAAC,OAAKA,EAAErD,OAAM0D,QAjBrDpE,EAmBduL,kBAAoB,SAAArI,GAChB,IAAIsI,EAAoB,GACxBtI,EAAQ0D,QAAQ,SAAA7C,GAAC,OAAIyH,EAAkBzH,EAAE3D,SAAWoL,EAAkBzH,EAAE3D,WAAaoL,EAAkBzH,EAAE3D,SAAW,IAEpH,IAAIqL,EAAY5K,OAAOyH,KAAKkD,GACxBE,EAAa,EACbC,EAAiB,GASrB,OAPAF,EAAU7E,QAAQ,SAAA7C,GACXyH,EAAkBzH,GAAK2H,IACtBA,EAAaF,EAAkBzH,GAC/B4H,EAAiB5H,KAIlB4H,GAlCG3L,EAqCd4L,oBAAsB,SAAA1I,GA4BlB,MA3BoB,CAChB2I,WAAY,CACRxI,KAAMrD,EAAKmL,iBAAiBjI,GAC5ByH,KAAM,oBACNC,SAAQ,OAAA9K,OAASE,EAAK8K,eAAd,YACR3B,MAAO,WAEX2C,WAAY,CACRzI,KAAMrD,EAAKqL,iBAAiBnI,GAC5ByH,KAAM,kBACNC,SAAU,cACVzB,MAAO,WAEX4C,mBAAoB,CAChB1I,KAAMrD,EAAKsL,yBAAyBpI,GACpCyH,KAAM,eACNC,SAAU,sBACVzB,MAAO,WAEXwC,eAAgB,CACZtI,KAAMrD,EAAKuL,kBAAkBrI,GAC7ByH,KAAM,wBACNC,SAAU,kBACVzB,MAAO,aA3DfnJ,EAAKyB,MAAQ,CACTuK,WAAW,GAHLhM,wEAqEV,IAAIiM,EAAgB3L,KAAKsL,oBAAoBtL,KAAKL,MAAMiD,SACpDgJ,EAAkBrL,OAAOyH,KAAK2D,GAIlC,OAFG3L,KAAKL,MAAMiD,QAAQkB,QAAU9D,KAAKmB,MAAMuK,WAAa1L,KAAKc,SAAS,CAAC4K,WAAW,IAG9ExN,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACH2B,KAAKmB,MAAMuK,UAAY,cAAgBE,EAAgBjH,IAAI,SAAAkH,GAAE,OAAI3N,EAAAC,EAAAC,cAAC0N,EAAD,CAAOjH,IAAKgH,EAAIzB,cAAeuB,EAAcE,eA9E1GtN,qBCqENwN,6MAnEXC,qBAAuB,SAAApJ,GACnB,IAAIqJ,EAAgB,GAQpB,OANArJ,EAAQ0D,QAAQ,SAAA7C,GACRA,EAAErD,OACF6L,EAAcxI,EAAEpD,OAAS4L,EAAcxI,EAAEpD,SAAW4L,EAAcxI,EAAEpD,OAAS,KAI9E4L,KAGXC,gBAAkB,SAACD,GACf,IAAIE,EAAU,GAOd,OANgB5L,OAAOyH,KAAKiE,GAElB3F,QAAQ,SAAAzF,GACdsL,EAAQ1F,KAAK,CAAE/H,KAAMmC,EAAGuL,MAAOH,EAAcpL,OAG1CsL,KAGXE,qBAAuB,SAAAzJ,GACnB,IACIqJ,EAAgBvM,EAAKsM,qBAAqBpJ,GAE1C0J,EAAe5M,EAAKwM,gBAAgBD,GAKxC,OAHAK,EAAeA,EAAaC,KAAK,SAACpO,EAAGqO,GAAJ,OAAUrO,EAAEiO,MAAQI,EAAEJ,SAC1CK,OAAO,EAAGH,EAAaxI,OANf,GAQdwI,2EAKP,IAAIA,EAAetM,KAAKqM,qBAAqBrM,KAAKL,MAAMiD,SAExD,OACI1E,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUC,UAAU,SACxBJ,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,QACrC1O,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CACIG,OAAO,WAGP9J,KAAMuJ,EACN3D,OAAQ,CACJmE,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KAI1C/O,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOnK,KAAK,WACZrE,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOQ,UAAU,EAAMC,QAAQ,OAAO5K,KAAK,aAC3CrE,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MAEAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAKS,QAAQ,QAAQC,QAAS,GAAIC,KAAK,sBA5DpC9O,aCwGZ+O,cArGX,SAAAA,IAAc,IAAA5N,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAsN,IACV5N,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAA+M,GAAA3M,KAAAX,QAMJuN,gBAAkB,SAAA1M,GAAC,OAAInB,EAAKoB,SAAS,CAAE0M,UAAW3M,EAAEG,OAAOC,SAP7CvB,EASd+N,aAAe,SAAAzO,GAAI,OAAI,IAAI0L,KAAKC,eAAe,QAAS,CAAEvL,MAAO,UAAWwL,OAAO5L,IATrEU,EAWdgO,WAAa,SAAAC,GACT,IAAMC,EAAc,CAChBC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,EACPC,IAAO,GACPC,IAAO,GACPC,IAAO,IAGX,OAAOb,EAAUpB,KAAK,SAACpO,EAAGqO,GAAJ,OAAUoB,EAAYzP,GAAKyP,EAAYpB,MA3BnD9M,EA8Bd+O,iBAAmB,SAAC7L,EAAS4K,GACzB,IAAIkB,EAAU,GADyBC,GAAA,EAAAC,GAAA,EAAAC,OAAApE,EAAA,IAGvC,QAAAqE,EAAAC,EAAmBnM,EAAnBoM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhN,QAAAmN,MAAAP,GAAA,EAA4B,KAAnB/O,EAAmBkP,EAAA7N,MAExB,GAAIrB,EAAOQ,KACP,GAAkB,iBAAdoN,EAA8B,CAC9B,IAAIxO,EAAOU,EAAK+N,aAAa,IAAIvO,KAAKU,EAAO4N,KAC7CkB,EAAQ1P,GAAQ0P,EAAQ1P,KAAU0P,EAAQ1P,GAAQ,OAElD0P,EAAQ9O,EAAO4N,IAAckB,EAAQ9O,EAAO4N,MAAgBkB,EAAQ9O,EAAO4N,IAAc,GAV9D,MAAA2B,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAevC,OAAOH,GA7CGhP,EAgDd2P,yBAA2B,SAACzM,EAAS4K,GAEjC,IAAIkB,EAAUhP,EAAK+O,iBAAiB7L,EAAS4K,GACzCrB,EAAU,GACVmD,EAAyB,iBAAd9B,EAA+B9N,EAAKgO,WAAWnN,OAAOyH,KAAK0G,IAAYnO,OAAOyH,KAAK0G,GAJnDa,GAAA,EAAAC,GAAA,EAAAC,OAAAhF,EAAA,IAM/C,QAAAiF,EAAAC,EAAiBL,EAAjBN,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5N,QAAAmN,MAAAK,GAAA,EAA2B,KAAlBK,EAAkBF,EAAAzO,MACvBkL,EAAQ1F,KAAK,CAAE/H,KAAMkR,EAAKC,MAAM,KAAK,GAAIzD,MAAOsC,EAAQkB,MAPb,MAAAT,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAU/C,OAAOtD,GA1DGzM,EA6DdoQ,wBAA0B,WACtB,MAA6B,YAAzBpQ,EAAKyB,MAAMqM,UACJ9N,EAAK2P,yBAAyB3P,EAAKC,MAAMiD,QAAS,WACzB,UAAzBlD,EAAKyB,MAAMqM,UACX9N,EAAK2P,yBAAyB3P,EAAKC,MAAMiD,QAAS,aACzB,UAAzBlD,EAAKyB,MAAMqM,UACX9N,EAAK2P,yBAAyB3P,EAAKC,MAAMiD,QAAS,gBACzB,UAAzBlD,EAAKyB,MAAMqM,UACX9N,EAAK2P,yBAAyB3P,EAAKC,MAAMiD,QAAS,cADtD,GAlEPlD,EAAKyB,MAAQ,CACTqM,UAAW,WAHL9N,wEA2EV,IAAMqD,EAAO/C,KAAK8P,0BAElB,OACI5R,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAAWC,UAAU,SACzBJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQC,GAAG,qBAAqB4C,MAAOjB,KAAKmB,MAAMqM,UAAWhL,SAAUxC,KAAKuN,iBACxErP,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,WAAd,WACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,SAAd,SACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,SAAd,SACA/C,EAAAC,EAAAC,cAAA,UAAQ6C,MAAM,SAAd,UAEJ/C,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,QACrC1O,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAyC3J,KAAMA,GAC3C7E,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAeqD,gBAAgB,QAC/B7R,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOS,QAAQ,SACfjP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAKS,QAAQ,QAAQE,KAAK,sBA/F5B9O,aC4EPyR,6MA3EXC,kBAAoB,SAAAC,GAChB,IAAIC,EAAc,IAAIjR,KAGtB,OAFAiR,EAAYC,QAAQD,EAAYhR,UAAY+Q,GAErCC,KAGX1C,aAAe,eAACzO,EAADkI,UAAApD,OAAA,QAAA2G,IAAAvD,UAAA,GAAAA,UAAA,GAAQ,IAAIhI,KAAZ,OAAuB,IAAIwL,KAAKC,eAAe,QAAS,CAAEvL,MAAO,UAAWwL,OAAO5L,MAElGqR,YAAc,WAGV,IAFA,IAAIC,EAAQ,GAEH1R,EAAI,GAAIA,EAAI,EAAGA,IACpB0R,EAAM7J,KAAK/G,EAAKuQ,kBAAkBrR,IAGtC,OAAO0R,KAGXC,eAAiB,SAAAvR,GACb,IAAIwR,EAAa,EACXC,EAAmBC,KAAKC,MAAuB,EAAhBD,KAAKE,SAAgB,GAFrCjC,GAAA,EAAAC,GAAA,EAAAC,OAAApE,EAAA,IAIrB,QAAAqE,EAAAC,EAAmBrP,EAAKC,MAAMiD,QAA9BoM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhN,QAAAmN,MAAAP,GAAA,EAAuC,KAA9B/O,EAA8BkP,EAAA7N,MAC/B4P,EAAW,IAAI3R,KAAKU,EAAOM,cAE3B2Q,EAASxR,aAAeL,EAAKK,YAAcwR,EAAS1R,YAAcH,EAAKG,WACvEqR,KARa,MAAArB,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAYrB,OAAO2B,EAAaC,KAGxBK,gBAAkB,WACd,IAAIR,EAAQ5Q,EAAK2Q,cACbU,EAAc,GAFExB,GAAA,EAAAC,GAAA,EAAAC,OAAAhF,EAAA,IAIpB,QAAAiF,EAAAC,EAAiBW,EAAjBtB,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5N,QAAAmN,MAAAK,GAAA,EAAwB,KAAfvQ,EAAe0Q,EAAAzO,MAChB+P,EAAa,CAAEhS,KAAI,GAAAQ,OAAKE,EAAK+N,aAAazO,GAAvB,KAAAQ,OAAgCR,EAAKG,YAC5D6R,EAAW5E,MAAQ1M,EAAK6Q,eAAevR,GACvC+R,EAAYtK,KAAKuK,IAPD,MAAA7B,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAUpB,OAAOsB,2EAKP,IAAMhO,EAAO/C,KAAK8Q,kBAElB,OACI5S,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BAAAoB,OAAoBQ,KAAKyN,aAAazN,KAAKiQ,kBAAkB,KAA7D,KAAAzQ,OAAqEQ,KAAKiQ,kBAAkB,IAAI9Q,YAChGjB,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,QACrC1O,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAGI3J,KAAMA,EACN4F,OAAQ,CACJmE,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGzC9O,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAOS,QAAQ,SACfjP,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,MACAxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAMuE,KAAK,EAAO1O,KAAK,WAAW4K,QAAQ,QAAQ+D,OAAO,UAAUC,YAAa,cArE/E5S,aC0EV6S,6MAvEXC,aAAe,SAACC,EAAOC,GACnB,IAAIjB,EAAQ,GACRkB,EAAY,IAAItS,KACpBsS,EAAUpB,QAAQoB,EAAUrS,UAAYmS,GAExC,IAAIG,EAAU,IAAIvS,KAGlB,IAFAuS,EAAQrB,QAAQqB,EAAQtS,UAAYoS,GAE7BC,EAAYC,GAAS,CACxBD,EAAUpB,QAAQoB,EAAUrS,UAAY,GAExC,IAAIH,EAAO,IAAIE,KAAKsS,GACpBlB,EAAM7J,KAAKzH,GAGf,OAAOsR,KAGXC,eAAiB,SAAAvR,GACb,IAAI0S,EAAe,EADE/C,GAAA,EAAAC,GAAA,EAAAC,OAAApE,EAAA,IAGrB,QAAAqE,EAAAC,EAAmBrP,EAAKC,MAAMiD,QAA9BoM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhN,QAAAmN,MAAAP,GAAA,EAAuC,KAA9B/O,EAA8BkP,EAAA7N,MAC/B0Q,EAAc,IAAIzS,KAAKU,EAAOM,cAE9ByR,EAAYtS,aAAeL,EAAKK,YAAcsS,EAAYxS,YAAcH,EAAKG,WAC7EuS,KAPa,MAAAvC,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAWrB,OAAO6C,KAGXE,iBAAmB,SAACC,EAAYL,EAAWC,EAAS5I,GAChD,IAAIyH,EAAQ5Q,EAAK2R,aAAaG,EAAWC,GACrCK,EAAkB,CAAEpT,KAAMmT,EAAYjP,QAAS,EAAGyK,KAAMxE,GAFF0G,GAAA,EAAAC,GAAA,EAAAC,OAAAhF,EAAA,IAI1D,QAAAiF,EAAAC,EAAiBW,EAAjBtB,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5N,QAAAmN,MAAAK,GAAA,EAAwB,KAAfvQ,EAAe0Q,EAAAzO,MACpB6Q,EAAgBlP,SAAWlD,EAAK6Q,eAAevR,IALO,MAAAmQ,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAQ1D,OAAOqC,KAGXhB,gBAAkB,WACd,IAAI/N,EAAO,GAMX,OAJAA,EAAK0D,KAAK/G,EAAKkS,iBAAiB,aAAc,GAAI,EAAG,YACrD7O,EAAK0D,KAAK/G,EAAKkS,iBAAiB,aAAc,IAAK,GAAI,YACvD7O,EAAK0D,KAAK/G,EAAKkS,iBAAiB,cAAe,IAAK,IAAK,YAElD7O,2EAKP,IAAMA,EAAO/C,KAAK8Q,kBAElB,OACI5S,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,GAAG,qBAAP,sBACAH,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,QACrC1O,EAAAC,EAAAC,cAACsO,EAAA,EAAD,KACIxO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAKS,QAAQ,UAAU4E,mBAAmB,EAAMhP,KAAMA,EAAMiP,GAAI,IAAKC,GAAI,IAAKC,YAAa,GAAIxJ,OAAK,IACpGxK,EAAAC,EAAAC,cAACsO,EAAA,EAAD,gBAlEQnO,aCsBjB4T,2LAfP,OACIjU,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACJH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACJH,EAAAC,EAAAC,cAACgU,EAAD,CAAcxP,QAAS5C,KAAKL,MAAMiD,UAClC1E,EAAAC,EAAAC,cAACiU,EAAD,CAASzP,QAAS5C,KAAKL,MAAMiD,WAEjC1E,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cACJH,EAAAC,EAAAC,cAACkU,EAAD,CAAY1P,QAAS5C,KAAKL,MAAMiD,UAChC1E,EAAAC,EAAAC,cAACmU,EAAD,CAAmB3P,QAAS5C,KAAKL,MAAMiD,mBAXtCrE,cCiDNiU,sBAhDX,SAAAA,IAAc,IAAA9S,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAwS,IACV9S,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAiS,GAAA7R,KAAAX,QAQJ2C,WATcpC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KASD,SAAAC,IAAA,IAAAiB,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWG,IAAMW,IAAI,YADrB,cACLD,EADKf,EAAAiB,KAAAjB,EAAAI,OAAA,SAEFW,EAAQG,MAFN,wBAAAlB,EAAAO,SAAAT,MATCjC,EAcdsD,kBAdczC,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAtD,EAAAuD,KAcM,SAAAuB,IAAA,IAAAL,EAAA,OAAAnB,EAAAtD,EAAAyD,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACIrC,EAAKiD,aADT,OACZC,EADYM,EAAAJ,KAEhBpD,EAAKoB,SAAS,CAAE8B,UAAS8I,WAAW,IAFpB,wBAAAxI,EAAAd,SAAAa,MAdNvD,EAmBd+S,WAAa,WACT,OACIvU,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAxBboB,EA6BdgT,SAAW,WACP,OACIxU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuU,EAAD,CAAQ/P,QAASlD,EAAKyB,MAAMyB,UAC5B1E,EAAAC,EAAAC,cAACwU,EAAD,CAAQhQ,QAASlD,EAAKyB,MAAMyB,YA/BpClD,EAAKyB,MAAQ,CACTyB,QAAS,GACT8I,WAAW,GAJLhM,wEAwCV,OACIxB,EAAAC,EAAAC,cAAA,WACK4B,KAAKmB,MAAMuK,UAAY1L,KAAKyS,aAAezS,KAAK0S,mBA5CzCnU,cCUTsU,oLAPP,OAFA7S,KAAKL,MAAMmT,eAIP5U,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAUC,GAAG,oBARNzU,aCiDJ0U,eAzCb,SAAAA,IAAc,IAAAvT,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAP,KAAAiT,IACZvT,EAAAa,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAA0S,GAAAtS,KAAAX,QAMFkT,WAAa,SAAArS,GAAC,OAAInB,EAAKoB,SAAS,CAACqS,SAAUtS,EAAEG,OAAOtC,QAPtCgB,EASd0T,iBAAmB,iBAA8B,YAAxB1T,EAAKyB,MAAMgS,UATtBzT,EAWd2T,iBAAmB,iBAA8B,YAAxB3T,EAAKyB,MAAMgS,UAXtBzT,EAad4T,mBAAqB,iBAA8B,cAAxB5T,EAAKyB,MAAMgS,UAbxBzT,EAedoT,aAAe,kBAAMpT,EAAKoB,SAAS,CAACqS,SAAU,aAb5CzT,EAAKyB,MAAQ,CACXgS,SAAU,IAHAzT,wEAiBL,IAAA6E,EAAAvE,KAEHuT,EAAsBvT,KAAKoT,mBAAqB,gBAAkB,oBAClEI,EAAsBxT,KAAKqT,mBAAqB,gBAAkB,oBAClEI,EAAwBzT,KAAKsT,qBAAuB,gBAAkB,oBAG1E,OACEpV,EAAAC,EAAAC,cAACsV,EAAA,EAAD,KACExV,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAkB,OAAK+T,EAAL,cAAqCrV,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAMV,GAAG,WAAWtU,KAAK,UAAU4D,QAAStC,KAAKkT,YAAjD,YACnDhV,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAkB,OAAKgU,EAAL,cAAqCtV,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAMV,GAAG,WAAWtU,KAAK,UAAU4D,QAAStC,KAAKkT,YAAjD,YACnDhV,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAkB,OAAKiU,EAAL,cAAuCvV,EAAAC,EAAAC,cAACsV,EAAA,EAAD,CAAMV,GAAG,aAAatU,KAAK,YAAY4D,QAAStC,KAAKkT,YAArD,eAGvDhV,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM3V,EAAAC,EAAAC,cAAC0V,GAAD,CAAMhB,aAAcvO,EAAKuO,kBAC7D5U,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM3V,EAAAC,EAAAC,cAAC2V,EAAD,SAC3C7V,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM3V,EAAAC,EAAAC,cAAC4V,EAAD,SAC3C9V,EAAAC,EAAAC,cAAC2U,EAAA,EAAD,CAAOY,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAM3V,EAAAC,EAAAC,cAAC6V,EAAD,iBArCnC1V,aCGE2V,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASV,OAAO3V,EAAAC,EAAAC,cAACoW,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6941f37f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport '../styles/TableHeader.css'\r\n\r\nclass TableHeader extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"table-header\">\r\n                <div className=\"header-item\">Name</div>\r\n                <div className=\"header-item\">Surname</div>\r\n                <div className=\"header-item\">Country</div>\r\n                <div className=\"header-item\">First Contact</div>\r\n                <div className=\"header-item\">Email</div>\r\n                <div className=\"header-item\">Sold</div>\r\n                <div className=\"header-item\">Owner</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableHeader","import React, { Component } from 'react'\r\nimport '../styles/ClientRow.css'\r\n\r\nclass ClientRow extends Component {\r\n\r\n    getPartOfName = (name, part) => {\r\n        let i = name.indexOf(\" \")\r\n        return part === \"first\" ? name.substring(0, i) : name.substring(i + 1)\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        date = new Date(date)\r\n\r\n        let day = date.getDate()\r\n        let month = date.getMonth() + 1\r\n        let year = date.getFullYear()\r\n\r\n        return `${month}/${day}/${year}`\r\n    }\r\n\r\n    popModal = () => {\r\n        let name = this.getPartOfName(this.props.client.name, \"first\")\r\n        let surname = this.getPartOfName(this.props.client.name, 'surname')\r\n\r\n        this.props.popModal(name, surname, this.props.client.country, this.props.client._id)\r\n    }\r\n\r\n    render() {\r\n        let client = this.props.client\r\n\r\n        return(\r\n            <div className=\"client-row\" onDoubleClick={this.popModal}>\r\n                <div className=\"row-item\">{this.getPartOfName(client.name, 'first')}</div>\r\n                <div className=\"row-item\">{this.getPartOfName(client.name, 'surname')}</div>\r\n                <div className=\"row-item\">{client.country}</div>\r\n                <div className=\"row-item\">{this.formatDate(client.firstContact)}</div>\r\n                <div className=\"row-item\">{client.emailType ? client.emailType : '.'}</div>\r\n                <div className=\"row-item\">{client.sold ? <i className=\"fas fa-check\"></i> : '-'}</div>\r\n                <div className=\"row-item\">{client.owner}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientRow","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nclass Modal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameInput: this.props.name,\r\n            surnameInput: props.surname,\r\n            countryInput: props.country\r\n        }\r\n    }\r\n\r\n    handleInput = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    userChangedInput = () => {\r\n        if (this.state.nameInput === this.props.name && \r\n            this.state.surnameInput === this.props.surname && \r\n            this.state.countryInput === this.props.country) {\r\n\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    updateClient = async () => {\r\n        if (!this.userChangedInput()) {\r\n            alert(\"Please change a field or click the 'x' to exit.\")\r\n            return\r\n        }\r\n        \r\n        let client = { \r\n            name: `${this.state.nameInput} ${this.state.surnameInput}`, \r\n            country: this.state.countryInput \r\n        }\r\n\r\n        await axios.put(`/client/modal/${this.props.id}`, client)\r\n        this.props.updateClient()\r\n    }\r\n\r\n    closeModal = () => this.props.closeModal()\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"modal\">\r\n                <div><i id=\"exit-modal-btn\" onClick={this.closeModal} className=\"far fa-times-circle\"></i></div>\r\n                <div><span>Name:</span><input type=\"text\" name=\"nameInput\" value={this.state.nameInput} onChange={this.handleInput} /></div>\r\n                <div><span>Surname:</span><input type=\"text\" name=\"surnameInput\" value={this.state.surnameInput} onChange={this.handleInput} /></div>\r\n                <div><span>Country:</span><input type=\"text\" name=\"countryInput\" value={this.state.countryInput} onChange={this.handleInput} /></div>\r\n                <div onClick={this.updateClient} id=\"clients-update-btn\">Update</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React, { Component } from 'react'\r\nimport TableHeader from './TableHeader';\r\nimport axios from 'axios'\r\nimport ClientRow from './ClientRow';\r\nimport '../styles/Clients.css'\r\nimport Modal from './Modal';\r\n\r\n\r\nclass Clients extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            searchFilter: \"\",\r\n            selectedFilter: \"name\",\r\n            pageNum: 1,\r\n            showModal: false,\r\n            modalClient: {}\r\n        }\r\n    }\r\n\r\n    handleFilter = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    getClients = async () => {\r\n        let clients = await axios.get('/clients')\r\n        return clients.data\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let clients = await this.getClients()\r\n        this.setState({ clients })\r\n    }\r\n\r\n    currentClients = () => this.state.clients.slice((this.state.pageNum * 20) - 20, this.state.pageNum * 20)\r\n\r\n    filterClients = () => {\r\n\r\n        if (this.state.selectedFilter !== \"sold\") {\r\n            return this.currentClients()\r\n                .filter(c => c[this.state.selectedFilter].toLowerCase()\r\n                    .includes(this.state.searchFilter.toLowerCase()))\r\n        } else {\r\n            return this.currentClients().filter(c => c.sold)\r\n        }\r\n    }\r\n\r\n    pageUp = () => {\r\n        if (this.state.pageNum * 20 > this.state.clients.length) { return }\r\n\r\n        let pageNum = this.state.pageNum + 1\r\n        this.setState({ pageNum })\r\n    }\r\n\r\n    pageDown = () => {\r\n        if (this.state.pageNum === 1) { return }\r\n\r\n        let pageNum = this.state.pageNum - 1\r\n        this.setState({ pageNum })\r\n    }\r\n\r\n    showCurrentClientNum = () => {\r\n\r\n        let topNum = this.state.pageNum * 20\r\n        let lowNum = topNum - 19\r\n\r\n        return (\r\n            <div id=\"paging\">\r\n                <i className=\"fas fa-chevron-left\" onClick={this.pageDown}></i>\r\n                <p>{lowNum} - {this.state.pageNum * 20 > this.state.clients.length && this.state.clients.length ? 'END' : topNum}</p>\r\n                <i className=\"fas fa-chevron-right\" onClick={this.pageUp}></i>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    popModal = (name, surname, country, id) => {\r\n        let modalClient = {name, surname, country, id}\r\n        this.setState({showModal: true, modalClient})\r\n    }\r\n\r\n    closeModal = () => this.setState({showModal: false, modalClient: {}})\r\n\r\n    updateClient = async () => {\r\n        let clients = await this.getClients()\r\n        this.setState({showModal: false, modalClient: {}, clients})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"clients-page\">\r\n                <div id=\"search-container\">\r\n\r\n                    <input type=\"text\" name=\"searchFilter\" placeholder=\"Search\" value={this.state.search} onChange={this.handleFilter} id=\"search-clients-input\" />\r\n                    <select id=\"select-filter\" name=\"selectedFilter\" value={this.state.selectedFilter} onChange={this.handleFilter}>\r\n                        <option value=\"name\">Name</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"sold\">Sold</option>\r\n                        <option value=\"owner\">Owner</option>\r\n                        <option value=\"country\">Country</option>\r\n                    </select>\r\n                </div>\r\n                <div id=\"table\">\r\n                    <TableHeader />\r\n                    {this.filterClients().map(c => <ClientRow popModal={this.popModal} client={c} key={c._id} />)}\r\n                    {this.showCurrentClientNum()}\r\n                </div>\r\n                {this.state.showModal ? <Modal \r\n                                name={this.state.modalClient.name} \r\n                                surname={this.state.modalClient.surname} \r\n                                country={this.state.modalClient.country}\r\n                                id={this.state.modalClient.id}\r\n                                closeModal={this.closeModal}\r\n                                updateClient={this.updateClient} /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clients","import React, { Component } from 'react'\r\n\r\nclass ClientInput extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            selectedName: \"\"\r\n        }\r\n    }\r\n\r\n    updateName = e => this.setState({selectedName: e.target.value}, function() { this.updateClientID() })\r\n\r\n    createDataListOptions = () => this.props.clients.map(c => <option key={c._id} value={c.name} />)\r\n\r\n    updateClientID = () => {\r\n        let client = this.props.clients.find(c => c.name === this.state.selectedName)\r\n        if(client) { this.props.updateClientID(client._id) }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>Client: </span>\r\n                <input type=\"text\" id=\"update-client-input\" placeholder=\"Client Name\" list=\"clients\" value={this.state.selectedName} onInput={this.updateName}/>\r\n                <datalist id=\"clients\">\r\n                    {this.createDataListOptions()}\r\n                </datalist>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientInput","import React, { Component } from 'react'\r\nimport ClientInput from './ClientInput';\r\nimport axios from 'axios';\r\nimport '../styles/Actions.css'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass UpdateClient extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            clientIdToUpdate: \"\",\r\n            newOwner: \"\",\r\n            newEmailType: \"\",\r\n            disableEmptySelect: { newOwner: false, newEmailType: false }\r\n        }\r\n    }\r\n\r\n    updateClientID = clientIdToUpdate => this.setState({ clientIdToUpdate })\r\n\r\n    getClients = async () => {\r\n        let clients = await axios.get('/clients/actions')\r\n        return clients.data\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let clients = await this.getClients()\r\n        this.setState({ clients })\r\n    }\r\n\r\n    createEmailDropdownElement = () => {\r\n        return (\r\n            <select name=\"newEmailType\" value={this.state.newEmailType} onChange={this.handleSelections}>\r\n                <option selected disabled={this.state.disableEmptySelect.newEmailType ? true : null}> -- select an email -- </option>\r\n                <option value=\"A\">A</option>\r\n                <option value=\"B\">B</option>\r\n                <option value=\"C\">C</option>\r\n                <option value=\"D\">D</option>\r\n            </select>\r\n        )\r\n    }\r\n\r\n    createMaterialEmailDropdownElement = () => {\r\n        return (\r\n            <Select\r\n                value={this.state.newEmailType} onChange={this.handleSelections}\r\n                inputProps={{\r\n                    name: 'newEmailType',\r\n                }}\r\n            >\r\n                <MenuItem disabled={this.state.disableEmptySelect.newOwner ? true : null}>\r\n                    <em>-- select an owner --</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"A\">A</MenuItem>\r\n                <MenuItem value=\"B\">B</MenuItem>\r\n                <MenuItem value=\"C\">C</MenuItem>\r\n                <MenuItem value=\"D\">D</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n\r\n    createOwnerDropdownElement = () => {\r\n        let availableOwners = []\r\n        this.state.clients.forEach(c => availableOwners.some(ao => ao === c.owner) ?\r\n            null : availableOwners.push(c.owner))\r\n\r\n        return availableOwners.map(ao => <option value={ao}>{ao}</option>)\r\n    }\r\n\r\n    createOwnerMaterialDropdownElement = () => {\r\n        let availableOwners = []\r\n        this.state.clients.forEach(c => availableOwners.some(ao => ao === c.owner) ?\r\n            null : availableOwners.push(c.owner))\r\n\r\n        return availableOwners.map(ao => <MenuItem key={ao} value={ao}>{ao}</MenuItem>)\r\n    }\r\n\r\n    updateUser = async (propertyToUpdate, updateValue) => {\r\n        await axios.put(`/client/${this.state.clientIdToUpdate}/?propToUpdate=${propertyToUpdate}`, { value: updateValue })\r\n    }\r\n\r\n    handleSelections = e => {\r\n        if (this.state.disableEmptySelect[e.target.name]) {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        } else {\r\n            let disableEmptySelect = { ...this.state.disableEmptySelect }\r\n            disableEmptySelect[e.target.name] = true\r\n\r\n            this.setState({ [e.target.name]: e.target.value, disableEmptySelect })\r\n        }\r\n    }\r\n\r\n    checkState = () => this.state.clientIdToUpdate ? true : false\r\n\r\n    transferOwnership = () => {\r\n        if (this.checkState()) {\r\n            this.updateUser('owner', this.state.newOwner)\r\n            this.props.showSnackbar(\"Updated\")\r\n        } else {\r\n            this.props.showSnackbar(\"Not updated\")\r\n        }\r\n    }\r\n\r\n    sendEmail = () => {\r\n        if (this.checkState()) {\r\n            this.updateUser('emailType', this.state.newEmailType)\r\n            this.props.showSnackbar(\"Updated\")\r\n        } else {\r\n            this.props.showSnackbar(\"Not updated\")\r\n        }\r\n    }\r\n\r\n    declareSale = () => {\r\n        if (this.checkState()) {\r\n            this.updateUser('sold', true)\r\n            this.props.showSnackbar(\"Updated\")\r\n        } else {\r\n            this.props.showSnackbar(\"Not updated\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"update-action\">\r\n                <h4>UPDATE</h4>\r\n\r\n\r\n                <ClientInput updateClientID={this.updateClientID} clients={this.state.clients} />\r\n\r\n                <div className=\"update-client\" id=\"transfer-ownership\">\r\n                    <FormControl >\r\n                        <InputLabel>Transfer Ownership To</InputLabel>\r\n\r\n                        <Select\r\n                            value={this.state.newOwner} onChange={this.handleSelections}\r\n                            inputProps={{\r\n                                name: 'newOwner',\r\n                                id: 'age-simple',\r\n                            }}\r\n                        >\r\n                            <MenuItem disabled={this.state.disableEmptySelect.newOwner ? true : null}>\r\n                                <em>-- select an owner --</em>\r\n                            </MenuItem>\r\n                            {this.createOwnerMaterialDropdownElement()}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Button id=\"transfer-btn\" onClick={this.transferOwnership} className=\"action-btn\">TRANSFER</Button>\r\n\r\n\r\n\r\n\r\n                    {/* <p>Transfer ownership to:</p>\r\n                    <select name=\"newOwner\" value={this.state.newOwner} onChange={this.handleSelections}>\r\n                        <option selected disabled={this.state.disableEmptySelect.newOwner ? true : null}> -- select an owner -- </option>\r\n                        {this.createOwnerDropdownElement()}\r\n                    </select>\r\n                    <div id=\"transfer-btn\" onClick={this.transferOwnership}>TRANSFER</div> */}\r\n                </div>\r\n\r\n                <div className=\"update-client\" id=\"send-email\">\r\n\r\n                    <FormControl >\r\n                        <InputLabel>Send Email</InputLabel>\r\n                        {this.createMaterialEmailDropdownElement()}\r\n                    </FormControl>\r\n                    <Button id=\"send-email-btn\" onClick={this.sendEmail} className=\"action-btn\">SEND</Button>\r\n\r\n                    {/* <p>Send email:</p>\r\n                    {this.createEmailDropdownElement()}\r\n                    <div id=\"send-email-btn\" onClick={this.sendEmail}>SEND</div> */}\r\n                </div>\r\n\r\n                <div className=\"update-client\" id=\"declare-sale\">\r\n\r\n                    <div id=\"declare-sale\">Declare Sale!</div>\r\n                    <Button id=\"declare-sale-btn\" onClick={this.declareSale} className=\"action-btn\">DECLARE</Button>\r\n\r\n                    {/* <p>Declare sale!</p>\r\n                    <div></div>\r\n                    <div id=\"declare-sale-btn\" onClick={this.declareSale}>DECLARE</div> */}\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateClient","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass AddClient extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: \"\",\r\n            surname: \"\",\r\n            email: \"\",\r\n            country: \"\",\r\n            owner: \"\"\r\n        }\r\n    }\r\n\r\n    handleInput = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    isStateSet = () => {\r\n        let isStateSet = true\r\n        let stateKeys = Object.keys(this.state)\r\n        stateKeys.forEach(sk => this.state[sk] ? null : isStateSet = false)\r\n\r\n        return isStateSet\r\n    }\r\n\r\n    saveClient = async (client) => {\r\n        await axios.post('/client', client)\r\n    }\r\n\r\n    clearInputs = () => this.setState({\r\n        firstName: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        country: \"\",\r\n        owner: \"\"\r\n    })\r\n\r\n    addClient = () => {\r\n        if (this.isStateSet()) {\r\n            let client = {\r\n                name: `${this.state.firstName} ${this.state.surname}`,\r\n                email: this.state.email,\r\n                firstContact: new Date(),\r\n                owner: this.state.owner,\r\n                country: this.state.country\r\n            }\r\n            this.saveClient(client)\r\n            this.clearInputs()\r\n            this.props.showSnackbar(\"Added\")\r\n        } else {\r\n            this.props.showSnackbar(\"Not added\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"create-action\">\r\n                <h4>ADD CLIENT</h4>\r\n\r\n                <div id=\"input-fields\">\r\n\r\n\r\n                    <TextField\r\n                        className=\"standard-name\"\r\n                        label=\"First Name\"\r\n                        name=\"firstName\"\r\n                        value={this.state.firstName} onChange={this.handleInput}\r\n                        margin=\"none\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className=\"standard-name\"\r\n                        label=\"Surname\"\r\n                        name=\"surname\" value={this.state.surname} onChange={this.handleInput}\r\n                        margin=\"none\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className=\"standard-name\"\r\n                        label=\"Email\"\r\n                        name=\"email\" value={this.state.email} onChange={this.handleInput}\r\n                        margin=\"none\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className=\"standard-name\"\r\n                        label=\"Country\"\r\n                        name=\"country\" value={this.state.country} onChange={this.handleInput}\r\n                        margin=\"none\"\r\n                    />\r\n\r\n                    <TextField\r\n                        className=\"standard-name\"\r\n                        label=\"Owner\"\r\n                        name=\"owner\" value={this.state.owner} onChange={this.handleInput}\r\n                        margin=\"none\"\r\n                    />\r\n\r\n                    <Button id=\"add-client-btn\" onClick={this.addClient} variant=\"contained\" color=\"primary\">Add New Client</Button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddClient","import React, { Component } from 'react'\r\nimport UpdateClient from './UpdateClient';\r\nimport AddClient from './AddClient';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\nclass Actions extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            showSavedMessage: false,\r\n            showUpdatedMessage: false,\r\n            showNotUpdatedMessage: false,\r\n            showNotAddedMessage: false\r\n        }\r\n    }\r\n\r\n    showSnackbar = message => {\r\n        if (message === \"Added\") {\r\n            this.setState({ showSavedMessage: true })\r\n            this.clearSnackbar(\"showSavedMessage\")\r\n        } else if(message === \"Updated\") {\r\n            this.setState({showUpdatedMessage: true})\r\n            this.clearSnackbar(\"showUpdatedMessage\")\r\n        } else if(message === \"Not updated\") {\r\n            this.setState({showNotUpdatedMessage: true})\r\n            this.clearSnackbar(\"showNotUpdatedMessage\")\r\n        } else if(message === \"Not added\") {\r\n            this.setState({showNotAddedMessage: true})\r\n            this.clearSnackbar(\"showNotAddedMessage\")\r\n        }\r\n    }\r\n\r\n    clearSnackbar = snackbar => {\r\n        setTimeout(() => this.setState({ [snackbar]: false }), 2000)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"actions\">\r\n                <UpdateClient showSnackbar={this.showSnackbar}/>\r\n                <Divider id=\"divider\" variant=\"middle\" />\r\n                <AddClient showSnackbar={this.showSnackbar} />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showSavedMessage}\r\n                    message={<span>Client Added</span>}\r\n                />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showNotAddedMessage}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span>Enter all fields &amp; try again</span>}\r\n                />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showUpdatedMessage}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span>Client Updated</span>}\r\n                />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    open={this.state.showNotUpdatedMessage}\r\n                    ContentProps={{\r\n                        'aria-describedby': 'message-id',\r\n                    }}\r\n                    message={<span>Select a client &amp; try again</span>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Actions","import React, { Component } from 'react'\r\nimport '../styles/Badges.css'\r\n\r\nclass Badge extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"badge-container\">\r\n                <div className=\"icon-container\" style={{backgroundColor: this.props.badgeCategory.color}}><i className={this.props.badgeCategory.icon}></i></div>\r\n                <div className=\"badge-value\">{this.props.badgeCategory.data}</div>\r\n                <div className=\"badge-sentence\">{this.props.badgeCategory.sentence}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Badge","import React, { Component } from 'react'\r\nimport Badge from './Badge';\r\n\r\nclass Badges extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    getMonthName = (date = new Date()) => new Intl.DateTimeFormat('en-US', {month: \"long\"}).format(date)\r\n\r\n    getNumNewClients = clients => {\r\n        const currentMonth = new Date().getMonth()\r\n\r\n        return clients.filter(c => (new Date(c.firstContact).getMonth()) === currentMonth).length\r\n    }\r\n\r\n    getNumEmailsSent = clients => clients.filter(c => c.emailType).length\r\n\r\n    getNumOutstandingClients = clients => clients.filter(c => !c.sold).length\r\n\r\n    getHottestCountry = clients => {\r\n        let clientsPerCountry = {}\r\n        clients.forEach(c => clientsPerCountry[c.country] ? clientsPerCountry[c.country]++ : clientsPerCountry[c.country] = 1)\r\n    \r\n        let countries = Object.keys(clientsPerCountry)\r\n        let maxClients = 0\r\n        let hottestCountry = \"\"\r\n\r\n        countries.forEach(c => {\r\n            if(clientsPerCountry[c] > maxClients){\r\n                maxClients = clientsPerCountry[c]\r\n                hottestCountry = c\r\n            }\r\n        })\r\n\r\n        return hottestCountry\r\n    }\r\n\r\n    createBadgeElements = clients => {\r\n        let badgeElements = {\r\n            newClients: {\r\n                data: this.getNumNewClients(clients),\r\n                icon: 'fas fa-chart-line',\r\n                sentence: `New ${this.getMonthName()} Clients`,\r\n                color: '#2ECC71'\r\n            },\r\n            emailsSent: {\r\n                data: this.getNumEmailsSent(clients),\r\n                icon: 'fas fa-envelope',\r\n                sentence: \"Emails Sent\",\r\n                color: '#3498DB'\r\n            },\r\n            outstandingClients: {\r\n                data: this.getNumOutstandingClients(clients),\r\n                icon: 'fas fa-users',\r\n                sentence: \"Outstanding Clients\",\r\n                color: '#E74C3C'\r\n            },\r\n            hottestCountry: {\r\n                data: this.getHottestCountry(clients),\r\n                icon: 'fas fa-globe-americas',\r\n                sentence: \"Hottest Country\",\r\n                color: '#F1C40F'\r\n            }\r\n        }\r\n\r\n        return badgeElements\r\n    }\r\n\r\n    render() {\r\n        let badgeElements = this.createBadgeElements(this.props.clients)\r\n        let badgeCategories = Object.keys(badgeElements)\r\n\r\n        if(this.props.clients.length && this.state.isLoading) { this.setState({isLoading: false}) }\r\n\r\n        return (\r\n            <div id=\"badges-container\">\r\n                {this.state.isLoading ? \"show loader\" : badgeCategories.map(bc => <Badge key={bc} badgeCategory={badgeElements[bc]} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Badges","import React, { Component } from 'react'\r\nimport { ComposedChart, ResponsiveContainer, CartesianAxis, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from 'recharts'\r\n\r\nclass TopEmployees extends Component {\r\n\r\n    createOwnerClientObj = clients => {\r\n        let employeeSales = {}\r\n\r\n        clients.forEach(c => {\r\n            if (c.sold) {\r\n                employeeSales[c.owner] ? employeeSales[c.owner]++ : employeeSales[c.owner] = 1\r\n            }\r\n        })\r\n\r\n        return employeeSales\r\n    }\r\n\r\n    createDataArray = (employeeSales) => {\r\n        let dataArr = []\r\n        let employees = Object.keys(employeeSales)\r\n\r\n        employees.forEach(e => {\r\n            dataArr.push({ name: e, sales: employeeSales[e] })\r\n        })\r\n\r\n        return dataArr\r\n    }\r\n\r\n    generateTopEmployees = clients => {\r\n        let numOfEmployees = 3\r\n        let employeeSales = this.createOwnerClientObj(clients)\r\n\r\n        let dataForChart = this.createDataArray(employeeSales)\r\n\r\n        dataForChart = dataForChart.sort((a, b) => a.sales - b.sales)\r\n        dataForChart.splice(0, dataForChart.length - numOfEmployees)\r\n\r\n        return dataForChart\r\n    }\r\n\r\n    render() {\r\n\r\n        let dataForChart = this.generateTopEmployees(this.props.clients)\r\n\r\n        return (\r\n            <div id=\"top-emp\" className=\"chart\">\r\n                <h5>Top Employees</h5>\r\n                <ResponsiveContainer width='100%' height=\"100%\"  >\r\n                    <ComposedChart\r\n                        layout=\"vertical\"\r\n                        // width={500}\r\n                        // height={250}\r\n                        data={dataForChart}\r\n                        margin={{\r\n                            top: 20, right: 20, bottom: 20, left: 20,\r\n                        }}\r\n                    >\r\n\r\n                        <XAxis type=\"number\" />\r\n                        <YAxis reversed={true} dataKey=\"name\" type=\"category\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n\r\n                        <Bar dataKey=\"sales\" barSize={25} fill=\"#003f5c\" />\r\n\r\n                    </ComposedChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopEmployees","import React, { Component } from 'react'\r\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from 'recharts'\r\n\r\n\r\nclass SalesBy extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            selection: \"country\",\r\n        }\r\n    }\r\n\r\n    handleSelection = e => this.setState({ selection: e.target.value })\r\n\r\n    getFullMonth = date => new Intl.DateTimeFormat('en-US', { month: \"short\" }).format(date)\r\n\r\n    sortMonths = monthsArr => {\r\n        const monthsOrder = {\r\n            \"Jan\": 1,\r\n            \"Feb\": 2,\r\n            \"Mar\": 3,\r\n            \"Apr\": 4,\r\n            \"May\": 5,\r\n            \"Jun\": 6,\r\n            \"Jul\": 7,\r\n            \"Aug\": 8,\r\n            \"Sep\": 9,\r\n            \"Oct\": 10,\r\n            \"Nov\": 11,\r\n            \"Dec\": 12\r\n        }\r\n\r\n        return monthsArr.sort((a, b) => monthsOrder[a] - monthsOrder[b])\r\n    }\r\n\r\n    createDataObject = (clients, selection) => {\r\n        let dataObj = {}\r\n\r\n        for (let client of clients) {\r\n\r\n            if (client.sold) {\r\n                if (selection === \"firstContact\") {\r\n                    let date = this.getFullMonth(new Date(client[selection]))\r\n                    dataObj[date] ? dataObj[date]++ : dataObj[date] = 1\r\n                } else {\r\n                    dataObj[client[selection]] ? dataObj[client[selection]]++ : dataObj[client[selection]] = 1\r\n                }\r\n            }\r\n        }\r\n\r\n        return dataObj\r\n    }\r\n\r\n    generateSalesByDataPoint = (clients, selection) => {\r\n\r\n        let dataObj = this.createDataObject(clients, selection)\r\n        let dataArr = []\r\n        let dataKeys = selection === \"firstContact\" ? this.sortMonths(Object.keys(dataObj)) : Object.keys(dataObj)\r\n\r\n        for (let item of dataKeys) {\r\n            dataArr.push({ name: item.split(\" \")[0], sales: dataObj[item] })\r\n        }\r\n\r\n        return dataArr\r\n    }\r\n\r\n    getChartDataBySelection = () => {\r\n        if (this.state.selection === \"country\") {\r\n            return this.generateSalesByDataPoint(this.props.clients, \"country\")\r\n        } else if (this.state.selection === \"email\") {\r\n            return this.generateSalesByDataPoint(this.props.clients, \"emailType\")\r\n        } else if (this.state.selection === \"month\") {\r\n            return this.generateSalesByDataPoint(this.props.clients, \"firstContact\")\r\n        } else if (this.state.selection === \"owner\") {\r\n            return this.generateSalesByDataPoint(this.props.clients, \"owner\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.getChartDataBySelection()\r\n\r\n        return (\r\n            <div id=\"sales-by\" className=\"chart\">\r\n                <h5>Sales By:</h5>\r\n                <select id=\"sales-by-selection\" value={this.state.selection} onChange={this.handleSelection}>\r\n                    <option value=\"country\">Country</option>\r\n                    <option value=\"email\">Email</option>\r\n                    <option value=\"month\">Month</option>\r\n                    <option value=\"owner\">Owner</option>\r\n                </select>\r\n                <ResponsiveContainer width='100%' height=\"100%\"  >\r\n                    <BarChart /* width={700} height={250} */ data={data}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"sales\" fill=\"#955196\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesBy","import React, { Component } from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nclass SalesSince extends Component {\r\n\r\n    getHistoricalDate = daysBack => {\r\n        let currentDate = new Date()\r\n        currentDate.setDate(currentDate.getDate() - daysBack)\r\n\r\n        return currentDate\r\n    }\r\n\r\n    getFullMonth = (date = new Date()) => new Intl.DateTimeFormat('en-US', { month: \"short\" }).format(date)\r\n\r\n    getAllDates = () => {\r\n        let dates = []\r\n\r\n        for (let i = 30; i > 0; i--) {\r\n            dates.push(this.getHistoricalDate(i))\r\n        }\r\n\r\n        return dates\r\n    }\r\n\r\n    getSalesByDate = date => {\r\n        let numOfSales = 0\r\n        const randomMultiplier = Math.floor((Math.random() * 4) + 1) //prettefy the chart data\r\n\r\n        for (let client of this.props.clients) {\r\n            let saleDate = new Date(client.firstContact)\r\n\r\n            if (saleDate.getMonth() === date.getMonth() && saleDate.getDate() === date.getDate()) {\r\n                numOfSales++\r\n            }\r\n        }\r\n\r\n        return numOfSales * randomMultiplier\r\n    }\r\n\r\n    getDataForChart = () => {\r\n        let dates = this.getAllDates()\r\n        let salesByDate = []\r\n\r\n        for (let date of dates) {\r\n            let saleByDate = { date: `${this.getFullMonth(date)} ${date.getDate()}` }\r\n            saleByDate.sales = this.getSalesByDate(date)\r\n            salesByDate.push(saleByDate)\r\n        }\r\n\r\n        return salesByDate\r\n    }\r\n\r\n\r\n    render() {\r\n        const data = this.getDataForChart()\r\n\r\n        return (\r\n            <div>\r\n                <h5>Sales since {`${this.getFullMonth(this.getHistoricalDate(30))} ${this.getHistoricalDate(30).getDate()}`}</h5>\r\n                <ResponsiveContainer width='100%' height=\"100%\"  >\r\n                    <LineChart\r\n                        // width={700}\r\n                        // height={300}\r\n                        data={data}\r\n                        margin={{\r\n                            top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line dot={false} type=\"monotone\" dataKey=\"sales\" stroke=\"#FE7259\" strokeWidth={3} />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalesSince","import React, { Component } from 'react'\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nclass ClientAcquisition extends Component {\r\n\r\n\r\n    getDateRange = (start, end) => {\r\n        let dates = []\r\n        let startDate = new Date()\r\n        startDate.setDate(startDate.getDate() - start)\r\n\r\n        let endDate = new Date()\r\n        endDate.setDate(endDate.getDate() - end)\r\n\r\n        while (startDate < endDate) {\r\n            startDate.setDate(startDate.getDate() + 1)\r\n\r\n            let date = new Date(startDate)\r\n            dates.push(date)\r\n        }\r\n\r\n        return dates\r\n    }\r\n\r\n    getSalesByDate = date => {\r\n        let numOfClients = 0\r\n\r\n        for (let client of this.props.clients) {\r\n            let contactDate = new Date(client.firstContact)\r\n\r\n            if (contactDate.getMonth() === date.getMonth() && contactDate.getDate() === date.getDate()) {\r\n                numOfClients++\r\n            }\r\n        }\r\n\r\n        return numOfClients\r\n    }\r\n\r\n    getClientsByDate = (periodName, startDate, endDate, color) => {\r\n        let dates = this.getDateRange(startDate, endDate)\r\n        let clientsByPeriod = { name: periodName, clients: 0, fill: color }\r\n\r\n        for (let date of dates) {\r\n            clientsByPeriod.clients += this.getSalesByDate(date)\r\n        }\r\n\r\n        return clientsByPeriod\r\n    }\r\n\r\n    getDataForChart = () => {\r\n        let data = []\r\n\r\n        data.push(this.getClientsByDate('Last Month', 30, 0, \"#795548\"))\r\n        data.push(this.getClientsByDate('1-6 Months', 180, 31, \"#34495E\"))\r\n        data.push(this.getClientsByDate('6-12 Months', 365, 181, \"#95A5A6\"))\r\n\r\n        return data\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.getDataForChart()\r\n\r\n        return (\r\n            <div>\r\n                <h5 id=\"client-acq-header\">Client Acquisition</h5>\r\n                <ResponsiveContainer width='100%' height=\"100%\"  >\r\n                    <PieChart /* width={400} height={300} */ >\r\n                        <Pie dataKey=\"clients\" isAnimationActive={true} data={data} cx={200} cy={150} outerRadius={80} label />\r\n                        <Tooltip />\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClientAcquisition","import React, { Component } from 'react'\r\nimport TopEmployees from './TopEmployees';\r\nimport SalesBy from './SalesBy';\r\nimport SalesSince from './SalesSince';\r\nimport ClientAcquisition from './ClientAcquisition';\r\nimport '../styles/Charts.css'\r\n\r\nclass Charts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"charts-container\">\r\n                <div id=\"first-two\">\r\n                    <TopEmployees clients={this.props.clients} />\r\n                    <SalesBy clients={this.props.clients} />\r\n                </div>\r\n                <div id=\"second-two\">\r\n                    <SalesSince clients={this.props.clients} />\r\n                    <ClientAcquisition clients={this.props.clients} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Charts","import React, { Component } from 'react'\r\nimport Badges from './Badges'\r\nimport axios from 'axios'\r\nimport Charts from './Charts';\r\nimport '../styles/Analytics.css'\r\n\r\nclass Analytics extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n\r\n    getClients = async () => {\r\n        let clients = await axios.get('/clients')\r\n        return clients.data\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let clients = await this.getClients()\r\n        this.setState({ clients, isLoading: false })\r\n    }\r\n\r\n    showLoader = () => {\r\n        return (\r\n            <div className=\"spinner\">\r\n                <div className=\"bounce1\"></div>\r\n                <div className=\"bounce2\"></div>\r\n                <div className=\"bounce3\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showData = () => {\r\n        return (\r\n            <div>\r\n                <Badges clients={this.state.clients} />\r\n                <Charts clients={this.state.clients} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ? this.showLoader() : this.showData()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Analytics","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n\r\n        this.props.redirectPage()\r\n\r\n        return(\r\n            // <div>Danny</div>\r\n            <Redirect to=\"/clients\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Link, Redirect} from 'react-router-dom'\r\nimport Clients from './components/client-comps/Clients';\r\nimport Actions from './components/action-comps/Actions';\r\nimport Analytics from './components/analytic-comps/Analytics';\r\nimport Home from './components/Home';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      pageName: \"\"\r\n    }\r\n  }\r\n\r\n  changePage = e => this.setState({pageName: e.target.name})\r\n\r\n  isClientSelected = () => this.state.pageName === 'clients' ? true : false\r\n\r\n  isActionSelected = () => this.state.pageName === 'actions' ? true : false\r\n\r\n  isAnalyticSelected = () => this.state.pageName === 'analytics' ? true : false\r\n\r\n  redirectPage = () => this.setState({pageName: 'clients'})\r\n\r\n  render() {\r\n\r\n    let clientSelectedClass = this.isClientSelected() ? \"page-selected\" : \"page-not-selected\"\r\n    let actionSelectedClass = this.isActionSelected() ? \"page-selected\" : \"page-not-selected\"\r\n    let analyticSelectedClass = this.isAnalyticSelected() ? \"page-selected\" : \"page-not-selected\"\r\n\r\n\r\n    return(\r\n      <Router>\r\n        <div id=\"navbar\">\r\n          <div className={`${clientSelectedClass} nav-link`}><Link to='/clients' name=\"clients\" onClick={this.changePage}>CLIENTS</Link></div> \r\n          <div className={`${actionSelectedClass} nav-link`}><Link to='/actions' name=\"actions\" onClick={this.changePage}>ACTIONS</Link></div>\r\n          <div className={`${analyticSelectedClass} nav-link`}><Link to='/analytics' name=\"analytics\" onClick={this.changePage}>ANALYTICS</Link></div>\r\n        </div>\r\n\r\n        <Route exact path='/' render={() => <Home redirectPage={this.redirectPage} />} />\r\n        <Route exact path='/clients' render={() => <Clients />}/>\r\n        <Route exact path='/actions' render={() => <Actions />}/>\r\n        <Route exact path='/analytics' render={() => <Analytics />}/>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}